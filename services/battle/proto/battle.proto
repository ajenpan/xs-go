syntax = "proto3";

package battle;

option go_package = "services/battle/proto;proto";

service Battle {
  rpc CreateBattle(CreateBattleRequest) returns (CreateBattleResponse) {}
  rpc WatcherJoinBattle(WatcherJoinBattleRequest) returns (WatcherJoinBattleResponse) {}
  // rpc OperateBattle(OperateBattleRequest) returns (OperateBattleResponse) {}
}

message EmptyMessage {}

message PlayerInfo {
  int64 uid = 1;
  int32 seat_id = 2;
  int32 score = 3;
}

message BattleConfigure {
  int32 ttf = 3; // 游戏最大进行时间, 单位: second
}

message CreateBattleRequest {
  string game_name = 1;
  bytes game_conf = 2;
  BattleConfigure battle_conf = 3;
  repeated PlayerInfo player_infos = 4;
}

message CreateBattleResponse {
  string battle_id = 1;
}

message WatcherJoinBattleRequest {
  string battle_id = 1;
  repeated PlayerInfo player_infos = 4;
}
message WatcherJoinBattleResponse {}

message BattleOverEvent {
  enum State {
    Finished = 0;
    Disbanded = 1;
    Timeover = 2;
  }

  message BattleScore {
    int64 score = 1;
    map<string, string> ex = 2;
  }

  State state = 1;
  map<int32, BattleScore> tally = 2;
}

message BattleMessageWrap {
  string battle_id = 1;
  int64 uid = 2;
  string topic = 3;
  bytes data = 4;
}